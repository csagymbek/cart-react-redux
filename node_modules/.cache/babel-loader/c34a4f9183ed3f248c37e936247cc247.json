{"ast":null,"code":"import { ACTIONS } from \"./actions\";\nexport const reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ACTIONS.CLEAR_CART:\n      return { ...state,\n        cart: []\n      };\n\n    case ACTIONS.INCREASE:\n      return { ...state,\n        cart: state.cart.map(item => {\n          //   console.log(item);\n          if (item.id === payload.id) {\n            item = { ...item,\n              amount: item.amount + 1\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case ACTIONS.DECREASE:\n      let tempCart = [];\n\n      if (payload.amount === 1) {\n        tempCart = state.cart.filter(item => {\n          return item.id !== payload.id;\n        });\n      } else {\n        tempCart = state.cart.map(item => {\n          //   console.log(item);\n          if (item.id === payload.id) {\n            item = { ...item,\n              amount: item.amount - 1\n            };\n          }\n\n          return item;\n        });\n      }\n\n      return { ...state,\n        cart: tempCart\n      };\n\n    case ACTIONS.REMOVE:\n      return { ...state,\n        cart: state.cart.filter(item => {\n          return item.id !== payload.id;\n        })\n      };\n\n    case ACTIONS.GET_TOTALS:\n      let {\n        total,\n        amount\n      } = state.cart.reduce((cartTotal, cartItem) => {\n        return cartTotal;\n      }, {\n        total: 0,\n        amount: 0\n      });\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/stilbos/Documents/REDUX/cart/src/reducer.js"],"names":["ACTIONS","reducer","state","type","payload","CLEAR_CART","cart","INCREASE","map","item","id","amount","DECREASE","tempCart","filter","REMOVE","GET_TOTALS","total","reduce","cartTotal","cartItem"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAR,KAA8B;AACnD,UAAQD,IAAR;AACE,SAAKH,OAAO,CAACK,UAAb;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF,SAAKN,OAAO,CAACO,QAAb;AACE,aAAO,EACL,GAAGL,KADE;AAELI,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWE,GAAX,CAAgBC,IAAD,IAAU;AAC7B;AACA,cAAIA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAAxB,EAA4B;AAC1BD,YAAAA,IAAI,GAAG,EAAE,GAAGA,IAAL;AAAWE,cAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,GAAc;AAAjC,aAAP;AACD;;AACD,iBAAOF,IAAP;AACD,SANK;AAFD,OAAP;;AAUF,SAAKT,OAAO,CAACY,QAAb;AACE,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAIT,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;AACxBE,QAAAA,QAAQ,GAAGX,KAAK,CAACI,IAAN,CAAWQ,MAAX,CAAmBL,IAAD,IAAU;AACrC,iBAAOA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAA3B;AACD,SAFU,CAAX;AAGD,OAJD,MAIO;AACLG,QAAAA,QAAQ,GAAGX,KAAK,CAACI,IAAN,CAAWE,GAAX,CAAgBC,IAAD,IAAU;AAClC;AACA,cAAIA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAAxB,EAA4B;AAC1BD,YAAAA,IAAI,GAAG,EAAE,GAAGA,IAAL;AAAWE,cAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,GAAc;AAAjC,aAAP;AACD;;AACD,iBAAOF,IAAP;AACD,SANU,CAAX;AAOD;;AACD,aAAO,EAAE,GAAGP,KAAL;AAAYI,QAAAA,IAAI,EAAEO;AAAlB,OAAP;;AACF,SAAKb,OAAO,CAACe,MAAb;AACE,aAAO,EACL,GAAGb,KADE;AAELI,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWQ,MAAX,CAAmBL,IAAD,IAAU;AAChC,iBAAOA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAA3B;AACD,SAFK;AAFD,OAAP;;AAMF,SAAKV,OAAO,CAACgB,UAAb;AACE,UAAI;AAAEC,QAAAA,KAAF;AAASN,QAAAA;AAAT,UAAoBT,KAAK,CAACI,IAAN,CAAWY,MAAX,CACtB,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACvB,eAAOD,SAAP;AACD,OAHqB,EAItB;AAAEF,QAAAA,KAAK,EAAE,CAAT;AAAYN,QAAAA,MAAM,EAAE;AAApB,OAJsB,CAAxB;AAMA,aAAOT,KAAP;;AACF;AACE,aAAOA,KAAP;AA9CJ;AAgDD,CAjDM","sourcesContent":["import { ACTIONS } from \"./actions\";\n\nexport const reducer = (state, { type, payload }) => {\n  switch (type) {\n    case ACTIONS.CLEAR_CART:\n      return { ...state, cart: [] };\n    case ACTIONS.INCREASE:\n      return {\n        ...state,\n        cart: state.cart.map((item) => {\n          //   console.log(item);\n          if (item.id === payload.id) {\n            item = { ...item, amount: item.amount + 1 };\n          }\n          return item;\n        }),\n      };\n    case ACTIONS.DECREASE:\n      let tempCart = [];\n      if (payload.amount === 1) {\n        tempCart = state.cart.filter((item) => {\n          return item.id !== payload.id;\n        });\n      } else {\n        tempCart = state.cart.map((item) => {\n          //   console.log(item);\n          if (item.id === payload.id) {\n            item = { ...item, amount: item.amount - 1 };\n          }\n          return item;\n        });\n      }\n      return { ...state, cart: tempCart };\n    case ACTIONS.REMOVE:\n      return {\n        ...state,\n        cart: state.cart.filter((item) => {\n          return item.id !== payload.id;\n        }),\n      };\n    case ACTIONS.GET_TOTALS:\n      let { total, amount } = state.cart.reduce(\n        (cartTotal, cartItem) => {\n          return cartTotal;\n        },\n        { total: 0, amount: 0 }\n      );\n      return state;\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}