{"ast":null,"code":"var _jsxFileName = \"/Users/stilbos/Documents/REDUX/cart/src/components/CartContainer.js\";\nimport React, { useEffect } from \"react\";\nimport CartItem from \"./CartItem\";\nimport { connect } from \"react-redux\";\nimport { ACTIONS } from \"../actions\";\n\nconst CartContainer = ({\n  total,\n  cart = [],\n  dispatch\n}) => {\n  useEffect(() => {\n    dispatch({\n      type: ACTIONS.GET_TOTALS\n    });\n  }); // console.log(cart);\n\n  if (cart.length === 0) {\n    return React.createElement(\"section\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"your bag\"), React.createElement(\"h4\", {\n      className: \"empty-cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"is currently empty\")));\n  }\n\n  return React.createElement(\"section\", {\n    className: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"your bag\")), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, cart.map(item => {\n    return React.createElement(CartItem, Object.assign({\n      key: item.id\n    }, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  })), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cart-total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"total \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"$\", total.toFixed(2)))), React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: () => dispatch({\n      type: ACTIONS.CLEAR_CART\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"clear cart\")));\n};\n\nconst mapStateToProps = ({\n  cart,\n  total\n}) => {\n  return {\n    total,\n    cart\n  };\n};\n\nexport default connect(mapStateToProps)(CartContainer);","map":{"version":3,"sources":["/Users/stilbos/Documents/REDUX/cart/src/components/CartContainer.js"],"names":["React","useEffect","CartItem","connect","ACTIONS","CartContainer","total","cart","dispatch","type","GET_TOTALS","length","map","item","id","toFixed","CLEAR_CART","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAI,GAAG,EAAhB;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AACxDP,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,OAAO,CAACM;AAAhB,KAAD,CAAR;AACD,GAFQ,CAAT,CADwD,CAKxD;;AAEA,MAAIH,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;AACrB,WACE;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CAFF,CADF;AASD;;AACD,SACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAU;AAClB,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,OAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CANF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQP,KAAK,CAACS,OAAN,CAAc,CAAd,CAAR,CADR,CADF,CAFF,EAOE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAE,MAAMP,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,OAAO,CAACY;AAAhB,KAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CAZF,CADF;AA6BD,CA/CD;;AAiDA,MAAMC,eAAe,GAAG,CAAC;AAAEV,EAAAA,IAAF;AAAQD,EAAAA;AAAR,CAAD,KAAqB;AAC3C,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeJ,OAAO,CAACc,eAAD,CAAP,CAAyBZ,aAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport CartItem from \"./CartItem\";\nimport { connect } from \"react-redux\";\nimport { ACTIONS } from \"../actions\";\n\nconst CartContainer = ({ total, cart = [], dispatch }) => {\n  useEffect(() => {\n    dispatch({ type: ACTIONS.GET_TOTALS });\n  });\n\n  // console.log(cart);\n\n  if (cart.length === 0) {\n    return (\n      <section className=\"cart\">\n        {/* cart header */}\n        <header>\n          <h2>your bag</h2>\n          <h4 className=\"empty-cart\">is currently empty</h4>\n        </header>\n      </section>\n    );\n  }\n  return (\n    <section className=\"cart\">\n      {/* cart header */}\n      <header>\n        <h2>your bag</h2>\n      </header>\n      {/* cart items */}\n      <article>\n        {cart.map((item) => {\n          return <CartItem key={item.id} {...item} />;\n        })}\n      </article>\n      {/* cart footer */}\n      <footer>\n        <hr />\n        <div className=\"cart-total\">\n          <h4>\n            total <span>${total.toFixed(2)}</span>\n          </h4>\n        </div>\n        <button\n          className=\"btn clear-btn\"\n          onClick={() => dispatch({ type: ACTIONS.CLEAR_CART })}\n        >\n          clear cart\n        </button>\n      </footer>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({ cart, total }) => {\n  return { total, cart };\n};\n\nexport default connect(mapStateToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}