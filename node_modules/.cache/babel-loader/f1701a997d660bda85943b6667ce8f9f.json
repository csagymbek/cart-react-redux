{"ast":null,"code":"import { ACTIONS } from \"./actions\";\nconst initialStore = {\n  cart: cartItems,\n  total: 0,\n  amount: 0\n};\nexport const reducer = (state = initialStore, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ACTIONS.CLEAR_CART:\n      return { ...state,\n        cart: []\n      };\n\n    case ACTIONS.INCREASE:\n      return { ...state,\n        cart: state.cart.map(item => {\n          //   console.log(item);\n          if (item.id === payload.id) {\n            item = { ...item,\n              amount: item.amount + 1\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case ACTIONS.DECREASE:\n      let tempCart = state.cart.map(item => {\n        //   console.log(item);\n        if (item.id === payload.id) {\n          item = { ...item,\n            amount: item.amount - 1\n          };\n        }\n\n        return item;\n      });\n      return { ...state,\n        cart: tempCart\n      };\n\n    case ACTIONS.REMOVE:\n      return { ...state,\n        cart: state.cart.filter(item => {\n          return item.id !== payload.id;\n        })\n      };\n\n    case ACTIONS.GET_TOTALS:\n      let {\n        total,\n        amount\n      } = state.cart.reduce((cartTotal, cartItem) => {\n        console.log(cartItem);\n        const {\n          price,\n          amount\n        } = cartItem;\n        const itemTotal = price * amount;\n        cartTotal.total += itemTotal;\n        cartTotal.amount += amount;\n        return cartTotal;\n      }, {\n        total: 0,\n        amount: 0\n      });\n      return { ...state,\n        total,\n        amount\n      };\n\n    case ACTIONS.TOGGLE_AMOUNT:\n      return { ...state,\n        cart: state.cart.map(cartItem => {\n          if (cartItem.id === payload.id) {\n            if (payload.toggle === \"inc\") {\n              return cartItem = { ...cartItem,\n                amount: cartItem.amount + 1\n              };\n            }\n\n            if (payload.toggle === \"dec\") {\n              return cartItem = { ...cartItem,\n                amount: cartItem.amount - 1\n              };\n            }\n          }\n\n          return cartItem;\n        })\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/stilbos/Documents/REDUX/cart/src/reducer.js"],"names":["ACTIONS","initialStore","cart","cartItems","total","amount","reducer","state","type","payload","CLEAR_CART","INCREASE","map","item","id","DECREASE","tempCart","REMOVE","filter","GET_TOTALS","reduce","cartTotal","cartItem","console","log","price","itemTotal","TOGGLE_AMOUNT","toggle"],"mappings":"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","sourcesContent":["import { ACTIONS } from \"./actions\";\n\nconst initialStore = { cart: cartItems, total: 0, amount: 0 };\n\nexport const reducer = (state = initialStore, { type, payload }) => {\n  switch (type) {\n    case ACTIONS.CLEAR_CART:\n      return { ...state, cart: [] };\n    case ACTIONS.INCREASE:\n      return {\n        ...state,\n        cart: state.cart.map((item) => {\n          //   console.log(item);\n          if (item.id === payload.id) {\n            item = { ...item, amount: item.amount + 1 };\n          }\n          return item;\n        }),\n      };\n    case ACTIONS.DECREASE:\n      let tempCart = state.cart.map((item) => {\n        //   console.log(item);\n        if (item.id === payload.id) {\n          item = { ...item, amount: item.amount - 1 };\n        }\n        return item;\n      });\n      return { ...state, cart: tempCart };\n    case ACTIONS.REMOVE:\n      return {\n        ...state,\n        cart: state.cart.filter((item) => {\n          return item.id !== payload.id;\n        }),\n      };\n    case ACTIONS.GET_TOTALS:\n      let { total, amount } = state.cart.reduce(\n        (cartTotal, cartItem) => {\n          console.log(cartItem);\n          const { price, amount } = cartItem;\n          const itemTotal = price * amount;\n          cartTotal.total += itemTotal;\n          cartTotal.amount += amount;\n          return cartTotal;\n        },\n        { total: 0, amount: 0 }\n      );\n      return { ...state, total, amount };\n    case ACTIONS.TOGGLE_AMOUNT:\n      return {\n        ...state,\n        cart: state.cart.map((cartItem) => {\n          if (cartItem.id === payload.id) {\n            if (payload.toggle === \"inc\") {\n              return (cartItem = { ...cartItem, amount: cartItem.amount + 1 });\n            }\n            if (payload.toggle === \"dec\") {\n              return (cartItem = { ...cartItem, amount: cartItem.amount - 1 });\n            }\n          }\n          return cartItem;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}